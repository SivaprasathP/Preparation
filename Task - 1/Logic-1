//cigarParty
public boolean cigarParty(int cigars, boolean isWeekend) {
  return (!isWeekend && cigars>=40 && cigars<=60) || (isWeekend && cigars>=40);
}

//dateFashion
public int dateFashion(int you, int date) {
  if(you<=2 || date<=2){
    return 0;
  }else if(you>=8 || date>=8){
    return 2;
  }
  
  return 1;
}

//squirrelPlay
public boolean squirrelPlay(int temp, boolean isSummer) {
  return (!isSummer && (temp>=60 && temp<=90)) || (isSummer && (temp>=60 && temp<=100)) ;
}

//caughtSpeeding
public int caughtSpeeding(int speed, boolean isBirthday) {
  if(!isBirthday){
    if(speed<=60) return 0;
    if(speed>=61 && speed<=80) return 1;
    if(speed>=81) return 2;
  }
  
  if(speed<=65) return 0;
  if(speed>=65 && speed<=85) return 1;
  
  return 2;
}

//sortaSum
public int sortaSum(int a, int b) {
  int sum=a+b;
  
  if(sum>=10 && sum<=19) return 20;
  
  return sum;
}

//alarmClock
public String alarmClock(int day, boolean vacation) {
  if(vacation){
    if(day==0 || day==6){
      return "off";
    }else{
      return "10:00";
    }
  }else{
    if(day==0 || day==6){
      return "10:00";
    }
  }
  
  return "7:00";
}

//love6
public boolean love6(int a, int b) {
  return a==6 || b==6 || (a-b)==6 || (a+b)==6 || (b-a)==6;
}

//in1To10
public boolean in1To10(int n, boolean outsideMode) {
  if(outsideMode){
    return n<=1 || n>=10;
  }
  
  return n>=1 && n<=10;
}

//specialEleven
public boolean specialEleven(int n) {
  return n%11==0 || n%11==1;
}

//more20
public boolean more20(int n) {
  return n%20==1 || n%20==2;
}

//old35
public boolean old35(int n) {
  return n%3==0 ^ n%5==0;
}

//less20
public boolean less20(int n) {
  return n%20==18 || n%20==19;
}

//nearTen
public boolean nearTen(int n) {
  return n%10<=2 || n%10==9 || n%10==8;
}

//teenSum
public int teenSum(int a, int b) {
  if(a>=13 && a<=19) return 19;
  if(b>=13 && b<=19) return 19;
  
  return a+b;
}

//answerCell
public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
  if(isAsleep) return false;
  
  if(isMorning && !isMom){
    return false;
  }
  return true;
}

//teaParty
public int teaParty(int tea, int candy) {
  if((tea>=5 && candy>=5) && (tea>=candy*2 || candy>=tea*2)) return 2;
  
  if(tea>=5 && candy>=5) return 1;
  
  return 0;
}

//fizzString
public String fizzString(String str) {
  if(str.length()>0){
    if(str.charAt(0)=='f' && str.charAt(str.length()-1)=='b'){
      return "FizzBuzz";
    }else if(str.charAt(0)=='f'){
      return "Fizz";
    }else if(str.charAt(str.length()-1)=='b'){
      return "Buzz";
    }
  }
  
  return str;
}

//fizzString2
public String fizzString2(int n) {
  String res="";
  
  if(n%3==0 && n%5==0){
    res+="FizzBuzz";
  }else if(n%3==0){
    res+="Fizz";
  }else if(n%5==0){
    res+="Buzz";
  }else{
    res+=n;
  }
  
  return res+"!";
}

//twoAsOne
public boolean twoAsOne(int a, int b, int c) {
  return a+b==c || b+c==a || a+c==b; 
}

//inOrder
public boolean inOrder(int a, int b, int c, boolean bOk) {
  if(bOk) return c>b;
  
  return b>a && c>b;
}

//inOrderEqual
public boolean inOrderEqual(int a, int b, int c, boolean equalOk) {
  if(equalOk) return b>=a && c>=b;
  
  return a<b && b<c;
}

//lastDigit
public boolean lastDigit(int a, int b, int c) {
  return a%10==b%10 || a%10==c%10 || b%10==c%10;
}

//lessBy10
public boolean lessBy10(int a, int b, int c) {
  return Math.abs(a-b)>=10 || Math.abs(a-c)>=10 || Math.abs(b-c)>=10;
}

//withoutDoubles
public int withoutDoubles(int die1, int die2, boolean noDoubles) {
  int sum=die1+die2;
  
  if(noDoubles && die1==die2){
    if(die1!=6){
      return sum+1;
    }else{
      return 7;
    }
  } 
  
  return sum;
}

//maxMod5
public int maxMod5(int a, int b) {
  if(a==b){
    return 0;
  }
  int x=a%5,y=b%5;
  
  if(x==y){
    return Math.min(a,b);
  }
  
  return Math.max(a,b);
}

//redTicket
public int redTicket(int a, int b, int c) {
  if(a==2 && b==2 && c==2){
    return 10;
  }
  
  if(a==b && b==c){
    return 5;
  }
  
  if(b!=a && c!=a){
    return 1;
  }
  
  return 0;
}

//greenTicket
public int greenTicket(int a, int b, int c) {
  if(a==b && b==c){
    return 20;
  }
  
  if(a==b || b==c || a==c){
    return 10;
  }
  
  return 0;
}

//blueTicket
public int blueTicket(int a, int b, int c) {
  if(a+b==10 || b+c==10 || c+a==10){
    return 10;
  }
  
  if(a+b==(b+c)+10 || a+b==(a+c)+10){
    return 5;
  }
  
  return 0;
}

//shareDigit
public boolean shareDigit(int a, int b) {
  int a1=a%10,a2=a/10;
  int b1=b%10,b2=b/10;
  
  if(a1==b1 || a1==b2 || a2==b1 || a2==b2){
    return true;
  }
  
  return false;
}


//sumLimit
public int sumLimit(int a, int b) {
  int sum=a+b;
  
  String s=String.valueOf(sum);
  String x=String.valueOf(a);
  
  if(s.length()==x.length()){
    return sum;
  }
  
  return a;
}

