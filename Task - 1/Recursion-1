//factorial
public int factorial(int n) {
  if(n==1){
    return 1;
  }
  
  return n * factorial(n-1);
}


//bunnyEars
public int bunnyEars(int bunnies) {
  return 2*bunnies;
}


//fibonacci
public int fibonacci(int n) {
  if(n<=1){
    return n;
  }
  return fibonacci(n-1)+fibonacci(n-2);
}


//bunnyEars2
public int bunnyEars2(int bunnies) {
  if(bunnies==0){
    return 0;
  }
  if(bunnies%2==0){
    return 3 + bunnyEars2(bunnies-1);
  }
  return 2+ bunnyEars2(bunnies-1);
}


//triangle
public int triangle(int rows) {
  if(rows==0){
    return 0;
  }
  return rows+triangle(rows-1);
}


//sumDigits
public int sumDigits(int n) {
  if(n==0){
    return 0;
  }
  return n%10 + sumDigits(n/10);
}

//count7
public int count7(int n) {
  if(n==0){
    return 0;
  }
  
  if(n%10==7){
    return 1+count7(n/10);
  }
  
  return count7(n/10);
}


//count8
public int count8(int n) {
  if(n==0){
    return 0;
  }
  
  if(n>9 && n%10==8 && n%100==88){
    return 2+count8(n/10);
  }
  
  if(n%10==8){
    return 1+count8(n/10);
  }
  
  return count8(n/10);
}


//powerN
public int powerN(int base, int n) {
  if(n==0){
    return 1;
  }
  
  return base*powerN(base,n-1);
}


//countX
public int countX(String str) {
  if(str.length()==0){
    return 0;
  }
  
  if(str.charAt(str.length()-1)=='x'){
    return 1+countX(str.substring(0,str.length()-1));
  }
  
  return countX(str.substring(0,str.length()-1));
}


//countHi
public int countHi(String str) {
  if(str.length()<=1){
    return 0;
  }
  
  if(str.length()>1 && str.substring(str.length()-2).equals("hi")){
    return 1+countHi(str.substring(0,str.length()-2));
  }
  
  return countHi(str.substring(0,str.length()-1));
}


//changeXY
public String changeXY(String str) {
  if(str.length()==0){
    return str;
  }
  
  
  if(str.charAt(str.length()-1)=='x'){
    return changeXY(str.substring(0,str.length()-1))+"y";
  }
  
  return changeXY(str.substring(0,str.length()-1))+str.charAt(str.length()-1);
}


//changePi
public String changePi(String str) {
   if(str.length()==0){
    return str;
  }
  
  if(str.length()>1 && str.substring(str.length()-2).equals("pi")){
    return changePi(str.substring(0,str.length()-2))+"3.14";
  }
  
  return changePi(str.substring(0,str.length()-1))+str.charAt(str.length()-1);
}


//noX
public String noX(String str) {
   if(str.length()==0){
    return str;
  }
  
  
  if(str.charAt(str.length()-1)=='x'){
    return noX(str.substring(0,str.length()-1));
  }
  
  return noX(str.substring(0,str.length()-1))+str.charAt(str.length()-1);
}


//array6
public boolean array6(int[] nums, int index) {
  if(index==nums.length){
    return false;
  }
  
  if(nums[index]==6) return true;
  
  return array6(nums,index+1);
}


//array11
public int array11(int[] nums, int index) {
  if(index==nums.length){
    return 0;
  }
  
  if(nums[index]==11){
    return 1+array11(nums,index+1);
  }
  
  return array11(nums,index+1);
}


//array220
public boolean array220(int[] nums, int index) {
  if(index==nums.length){
    return false;
  }
  
  if(index<nums.length-1 && nums[index]*10==nums[index+1]){
    return true;
  }
  
  return array220(nums,index+1);
}


//allstar
public String allStar(String str) {
  if(str.length()<=1){
    return str;
  }
  
  return allStar(str.substring(0,str.length()-1))+"*"+str.charAt(str.length()-1);
}


//pairStar
public String pairStar(String str) {
  if(str.length()<=1){
    return str;
  }
  
  if(str.length()>1 && (str.charAt(str.length()-1)==str.charAt(str.length()-2))){
    return pairStar(str.substring(0,str.length()-1))+"*"+str.charAt(str.length()-1);
  }
  return pairStar(str.substring(0,str.length()-1))+str.charAt(str.length()-1);
}


//endX
public String endX(String str) {
  if(str.length()<=0){
    return str;
  }
  
  if(str.charAt(0)!='x'){
    return str.charAt(0)+endX(str.substring(1));
  }
  return endX(str.substring(1))+"x";
}


//countPairs
public int countPairs(String str) {
  if(str.length()==0){
    return 0;
  }
  
  if(str.length()>2 && str.charAt(0)==str.charAt(2)){
    return 1+countPairs(str.substring(1));
  }
  
  return countPairs(str.substring(1));
}


//countABC
public int countAbc(String str) {
  if(str.length()==0){
    return 0;
  }
  
  if(str.length()>2 && (str.substring(0,3).equals("abc") || str.substring(0,3).equals("aba"))){
    return 1+countAbc(str.substring(1));
  }
  
  return countAbc(str.substring(1));
}


//count11
public int count11(String str) {
  if(str.length()==0){
    return 0;
  }
  
  if(str.length()>1 && (str.substring(0,2).equals("11"))){
    return 1+count11(str.substring(2));
  }
  
  return count11(str.substring(1));
}


//stringClean
public String stringClean(String str) {
  if(str.length()==1){
    return str;
  }
  
  char first=str.charAt(0);
  char second=str.charAt(1);
  
  if(first==second){//skip the first character
    return stringClean(str.substring(1));
  }
  
  return first+stringClean(str.substring(1));
}


//countHi2
public int countHi2(String str) {
  if(str.length()==0){
    return 0;
  }
  if(str.length()==2 && str.equals("hi")){
    return 1;
  }
  if(str.length()>2 && (str.substring(str.length()-2).equals("hi") && str.charAt(str.length()-3)!='x')){
    return 1+countHi2(str.substring(0,str.length()-1));
  }
  
  return countHi2(str.substring(0,str.length()-1));
}


//parenBit
public String parenBit(String str) {
  if(str.length()<=1){
    return str;
  }
  
  char first=str.charAt(0);
  char last=str.charAt(str.length()-1);
  
  if(first=='(' && last==')'){
    return str;
  }
  
  if(first=='('){
    return parenBit(str.substring(0,str.length()-1));
  }
  
  if(last==')'){
    return parenBit(str.substring(1));
  }
  
  return parenBit(str.substring(1,str.length()-1));
}


//nestParen
public boolean nestParen(String str) {
  if(str.length()==0){
    return true;
  }
  
  char first=str.charAt(0);
  char last=str.charAt(str.length()-1);
  
  if(first=='(' && last==')'){
    return nestParen(str.substring(1,str.length()-1));
  }
  
  return false;
}


//strCount
public int strCount(String str, String sub) {
  if(str.length()<sub.length()){
    return 0;
  }
  
  if(str.substring(0,sub.length()).equals(sub)){
    return 1+strCount(str.substring(sub.length()),sub);
  }
  
  return strCount(str.substring(1),sub);
}


//strCopies
public boolean strCopies(String str, String sub, int n) {
  if(str.length()<sub.length() && n>0){
    return false;
  }
  
  if(n<=0){
    return true;
  }
  
  if(str.substring(0,sub.length()).equals(sub)){
    return strCopies(str.substring(1),sub,n-1);
  }
  
  return strCopies(str.substring(1),sub,n);
}


//strDist
public int strDist(String str, String sub) {
  if(str.length()<sub.length()){
    return 0;
  }
  
  if(!str.substring(0,sub.length()).equals(sub)){
    return strDist(str.substring(1),sub);
  }
  
  if(!str.substring(str.length()-sub.length()).equals(sub)){
    return strDist(str.substring(0,str.length()-1),sub);
  }
  
  return str.length();
}
