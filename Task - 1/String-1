//helloName
public String helloName(String name) {
  return "Hello "+name+"!";
}


//makeAbba
public String makeAbba(String a, String b) {
  return a+b+b+a;
}


//makeTags
public String makeTags(String tag, String word) {
  return "<"+tag+">"+word+"</"+tag+">";
}


//makeOutWord
public String makeOutWord(String out, String word) {
  return out.substring(0,2)+word+out.substring(2,4);
}


//extraEnd
public String extraEnd(String str) {
  String sub=str.substring(str.length()-2);
  return sub+sub+sub;
}


//firstTwo
public String firstTwo(String str) {
  if(str.length()>=2){
    return str.substring(0,2);
  }
  return str;
}


//firstHalf
public String firstHalf(String str) {
  return str.substring(0,str.length()/2);
}


//withoutEnd
public String withoutEnd(String str) {
  return str.substring(1,str.length()-1);
}


//comboString
public String comboString(String a, String b) {
  if(a.length()<b.length()){
    return a+b+a;
  }
  return b+a+b;
}


//nonStart
public String nonStart(String a, String b) {
  return a.substring(1)+b.substring(1);
}


//left2
public String left2(String str) {
  if(str.length()==2){
    return str;
  }
  
  return str.substring(2)+str.substring(0,2);
}


//right2
public String right2(String str) {
  if(str.length()==2){
    return str;
  }
  
  return str.substring(str.length()-2)+str.substring(0,str.length()-2);
}


//theEnd
public String theEnd(String str, boolean front) {
  if(front){
    return str.substring(0,1);
  }
  
  return str.substring(str.length()-1);
}


//withoutEnd2
public String withouEnd2(String str) {
  if(str.length()<=2){
    return "";
  }
  
  return str.substring(1,str.length()-1);
}


//middleTwo
public String middleTwo(String str) {
  return str.substring((str.length()/2)-1,(str.length()/2)+1);
}


//endsLy
public boolean endsLy(String str) {
  if(str.length()<2) return false;
  return str.substring(str.length()-2).equals("ly");
}

//nTwice
public String nTwice(String str, int n) {
  return str.substring(0,n) + str.substring(str.length()-n);
}

//twoChar
public String twoChar(String str, int index) {
  if(index<0 || index+2>str.length()){
    return str.substring(0,2);
  }
  
  return str.substring(index,index+2);
}


//middleThree
public String middleThree(String str) {
  return str.substring((str.length()/2)-1,(str.length()/2)+2);
}

//hasBad
public boolean hasBad(String str) {
  if(str.length()>=3 && str.substring(0,3).equals("bad")){
    return true;
  }
  
  if(str.length()>=4 && str.substring(1,4).equals("bad")){
    return true;
  }
  
  return false;
}


//atFirst
public String atFirst(String str) {
  if(str.length()>=2){
    return str.substring(0,2);
  }
  
  while(str.length()<2){
    str+='@';
  }
  
  return str;
}


//lastChars
public String lastChars(String a, String b) {
  String res="";
  
  if(a.length()>=1){
    res+=a.charAt(0);
  }else{
    res+='@';
  }
  
  if(b.length()>=1){
    res+=b.charAt(b.length()-1);
  }else{
    res+='@';
  }
  
  return res;
}


//concat
public String conCat(String a, String b) {
  if(a.length()==0){
    return b;
  }
  
  if(b.length()==0){
    return a;
  }
  
  if(a.charAt(a.length()-1)==b.charAt(0)){
    return a+b.substring(1);
  }
  
  return a+b;
}


//lastTwo
public String lastTwo(String str) {
  if(str.length()<2){
    return str;
  }
  return str.substring(0,str.length()-2)+str.charAt(str.length()-1)+str.charAt(str.length()-2);
}


//seeColor
public String seeColor(String str) {
  if(str.length()>=3){
    if(str.substring(0,3).equals("red")){
      return "red";
    }
  }
  
  if(str.length()>=4){
    if(str.substring(0,4).equals("blue")){
      return "blue";
    }
  }
  
  return "";
}


//frontAgain
public boolean frontAgain(String str) {
  if(str.length()<2){
    return false;
  }
  
  return str.substring(0,2).equals(str.substring(str.length()-2));
}


//minCat
public String minCat(String a, String b) {
  if(a.length()<b.length()){
    return a+b.substring(b.length()-a.length());
  }
  
  return a.substring(a.length()-b.length())+b;
}


//extraFront
public String extraFront(String str) {
  if(str.length()<=2){
    return str+str+str;
  }
  
  String res=str.substring(0,2);
  return res+res+res;
}


//without2
public String without2(String str) {
  if(str.length()<2){
    return str;
  }
  
  if(str.substring(0,2).equals(str.substring(str.length()-2))){
    return str.substring(2);
  }
  
  return str;
}


//deFront
public String deFront(String str) {    
  if(str.charAt(0)=='a' && str.charAt(1)=='b'){
    return "a"+"b"+str.substring(2);
  }else if(str.charAt(0)=='a'){
    return "a"+str.substring(2);
  }else if(str.charAt(1)=='b'){
    return "b"+str.substring(2);
  }
  
  return str.substring(2);
}


//startWord
public String startWord(String str, String word) {
  if(word.length()>str.length()){
    return "";
  }
  String res="";
  
  for(int i=0;i<word.length();i++){
    if(i==0){
      res+=str.charAt(0);
      continue;
    }
    
    if(str.charAt(i)==word.charAt(i)){
      res+=str.charAt(i);
    }else{
      return "";
    }
  }
  
  return res;
}


//withoutX
public String withoutX(String str) {
  String res="";
  
  for(int i=0;i<str.length();i++){
    if(str.charAt(i)=='x' && (i==0 || i==str.length()-1)){
      continue;
    }
    
    res+=str.charAt(i);
  }
  
  return res;
}


//withoutX2
public String withoutX2(String str) {
  String res="";
  
  for(int i=0;i<str.length();i++){
    if(str.charAt(i)=='x' && (i==0 || i==1)){
      continue;
    }
    
    res+=str.charAt(i);
  }
  
  return res;
}
